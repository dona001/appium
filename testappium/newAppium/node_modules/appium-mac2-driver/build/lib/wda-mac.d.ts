export default WDA_MAC_SERVER;
declare const WDA_MAC_SERVER: WDAMacServer;
declare class WDAMacServer {
    process: WDAMacProcess | null;
    serverStartupTimeoutMs: number;
    proxy: WDAMacProxy | null;
    isProxyingToRemoteServer: boolean;
    isProxyReady(throwOnExit?: boolean): Promise<boolean>;
    /**
     * @typedef {Object} ProxyProperties
     *
     * @property {string} scheme - The scheme proxy to.
     * @property {string} host - The host name proxy to.
     * @property {number} port - The port number proxy to.
     * @property {string} path - The path proxy to.
     */
    /**
     * Returns proxy information where WDAMacServer proxy to.
     *
     * @param {Object} caps - The capabilities in the session.
     * @return {ProxyProperties}
     * @throws Error if 'webDriverAgentMacUrl' had invalid URL
     */
    parseProxyProperties(caps: any): {
        /**
         * - The scheme proxy to.
         */
        scheme: string;
        /**
         * - The host name proxy to.
         */
        host: string;
        /**
         * - The port number proxy to.
         */
        port: number;
        /**
         * - The path proxy to.
         */
        path: string;
    };
    startSession(caps: any): Promise<void>;
    stopSession(): Promise<void>;
}
declare class WDAMacProcess {
    showServerLogs: boolean;
    port: number;
    host: string;
    bootstrapRoot: string;
    proc: SubProcess | null;
    get isRunning(): boolean;
    get pid(): number | null | undefined;
    listChildrenPids(): Promise<string[]>;
    cleanupProjectIfFresh(): Promise<void>;
    hasSameOpts({ showServerLogs, systemPort, systemHost, bootstrapRoot }: {
        showServerLogs: any;
        systemPort: any;
        systemHost: any;
        bootstrapRoot: any;
    }): boolean;
    init(opts?: {}): Promise<boolean>;
    stop(): Promise<void>;
    kill(): Promise<void>;
}
declare class WDAMacProxy extends JWProxy {
    /** @type {boolean|undefined} */
    didProcessExit: boolean | undefined;
    proxyCommand(url: any, method: any, body?: null): Promise<any>;
}
import { SubProcess } from 'teen_process';
import { JWProxy } from 'appium/driver';
//# sourceMappingURL=wda-mac.d.ts.map